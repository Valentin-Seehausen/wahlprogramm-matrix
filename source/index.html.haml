- dist = data.distances
- agendas = data.agendas
- all_docs = agendas.map(&:last).reduce(:+)
- min = 0.1
- score_classes_fn = lambda { |p| all_docs.map { |doc| [doc, dist[p.id][doc.id]] }.select { |(doc, d)| d.is_a?(Numeric) && d > min }.map { |(doc, d)| [doc, ((1.0-d)/(1.0-min)*10).round] }.map { |(doc, d)| "dist-#{doc.id.gsub('.','')}-#{d}" } }
- sass_doc_list = all_docs.map(&:id).map { |id| id.gsub('.','') }.map(&:inspect).join(', ')

:sass
  $docs: #{sass_doc_list}
  $distLevels: 10
  @each $doc in $docs
    .doc-\#{$doc}-selected
      @for $level from 0 to $distLevels
        .doc.dist-\#{$doc}-\#{$level}
          background-color: rgba(255, 0, 0, (1-$level/$distLevels)/2)
        a.dist-\#{$doc}-\#{$level}
          background-color: rgba(255, 0, 0, 1-$level/$distLevels)

%header
  %h1.cell Wahlprogramm-Matrix
  %p.manual.cell
    Wähle Paragraphen per Mausklick aus und andere thematisch ähnliche Paragraphen werden farblich hervorgehoben.
  %p.tech.cell
    Die Ähnlichkeit wurde rein maschinell ermittelt (mit <a href='http://en.wikipedia.org/wiki/Tf%E2%80%93idf'>tf-idf</a>).
  %p.description.cell
    Dies ist ein Experiment von <a href="http://kirelabs.org">Daniel Kirsch</a>, <a href="https://github.com/djmaze">Martin Honermeyer</a>, <a href="https://github.com/webwurst">Tobias Bradtke</a> und <a href="https://github.com/jahnique">Yannic Schencking</a> für
  #logo.cell
    %a{href:'http://codeformuenster.org'}
      %img{src:'http://codeformuenster.org/img/cfm_logo.png', alt:'Code for Münster'}

#container
  #spd-minimap.minimap
    .scroll-indicator
    - agendas.SPD.each do |p|
      - score_classes = score_classes_fn[p]
      %a{href: "#doc-#{p.id.gsub('.','')}", style: "height: #{100.0*p.text.length/agendas.SPD.map(&:text).map(&:length).reduce(:+)}%", class: score_classes, :"data-important" => data.important[p.id].join(', ')}
  #spd.sub-container
    .wrapper
      %h1.party-name SPD
      - agendas.SPD.each do |p|
        - score_classes = score_classes_fn[p]
        .doc{id: "doc-#{p.id.gsub('.','')}", class: score_classes, data: {click: "doc-#{p.id.gsub('.','')}-selected"}}
          = GitHub::Markdown.render p.text
  #cdu-minimap.minimap
    .scroll-indicator
    - agendas.CDU.each do |p|
      - score_classes = score_classes_fn[p]
      %a{href: "#doc-#{p.id.gsub('.','')}", style: "height: #{100.0*p.text.length/agendas.CDU.map(&:text).map(&:length).reduce(:+)}%", class: score_classes, :"data-important" => data.important[p.id].join(', ')}
  #cdu.sub-container
    .wrapper
      %h1.party-name CDU
      - agendas.CDU.each do |p|
        - score_classes = score_classes_fn[p]
        .doc{id: "doc-#{p.id.gsub('.','')}", class: score_classes, data: {click: "doc-#{p.id.gsub('.','')}-selected"}}
          = GitHub::Markdown.render p.text
  #gruene-minimap.minimap
    .scroll-indicator
    - agendas.Gruene.each do |p|
      - score_classes = score_classes_fn[p]
      %a{href: "#doc-#{p.id.gsub('.','')}", style: "height: #{100.0*p.text.length/agendas.Gruene.map(&:text).map(&:length).reduce(:+)}%", class: score_classes, :"data-important" => data.important[p.id].join(', ')}
  #gruene.sub-container
    .wrapper
      %h1.party-name Grüne
      - agendas.Gruene.each do |p|
        - score_classes = score_classes_fn[p]
        .doc{id: "doc-#{p.id.gsub('.','')}", class: ["dist-#{p.id.gsub('.','')}-0"] + score_classes, data: {click: "doc-#{p.id.gsub('.','')}-selected"}}
          = GitHub::Markdown.render p.text
  #piraten-minimap.minimap
    .scroll-indicator
    - agendas.Piraten.each do |p|
      - score_classes = score_classes_fn[p]
      %a{href: "#doc-#{p.id.gsub('.','')}", style: "height: #{100.0*p.text.length/agendas.Piraten.map(&:text).map(&:length).reduce(:+)}%", class: score_classes, :"data-important" => data.important[p.id].join(', ')}
  #piraten.sub-container
    .wrapper
      %h1.party-name Piraten
      - agendas.Piraten.each do |p|
        - score_classes = score_classes_fn[p]
        .doc{id: "doc-#{p.id.gsub('.','')}", class: ["dist-#{p.id.gsub('.','')}-0"] + score_classes, data: {click: "doc-#{p.id.gsub('.','')}-selected"}}
          = GitHub::Markdown.render p.text
